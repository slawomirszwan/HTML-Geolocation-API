D:\css-szkolenie>git clone https://github.com/slawomirszwan/HTML-Geolocation-API.git
Cloning into 'HTML-Geolocation-API'...
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (5/5), done.
-----------------------
D:\css-szkolenie>cd HTML-Geolocation-API
---------------------
!info.txt
------------------------
D:\css-szkolenie\HTML-Geolocation-API>git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        !info.txt

nothing added to commit but untracked files present (use "git add" to track)
-------------------------

public/index.html

emmet
html:5


D:\css-szkolenie\HTML-Geolocation-API>git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        !info.txt
        .vscode/
        favicon.ico
        public/

nothing added to commit but untracked files present (use "git add" to track)

-------------------------------------------------
D:\css-szkolenie\HTML-Geolocation-API>git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   !info.txt
        modified:   .gitignore
        new file:   favicon.ico
        new file:   public/flashMessage.css
        new file:   public/flashMessage.js
        new file:   public/geolocation.js
        new file:   public/index.html
        new file:   public/index.js
        new file:   public/style.css

---------------------------------------------------

D:\css-szkolenie\HTML-Geolocation-API>git status

D:\css-szkolenie\HTML-Geolocation-API>git add .

D:\css-szkolenie\HTML-Geolocation-API>git commit -m "poprawka"

git push


https://dev.to/juni/git-and-github---must-know-commands-to-make-your-first-commit-333c

Git task 	Notes 	Git commands
Status 	List the files you've changed and those you still need to add or commit: 	
git status

Add files 	Add one or more files to staging (index): 	
git add <filename>
git add .

Commit 	Commit changes to head (but not yet to the remote repository): 	
git commit -m "Commit message"

	Commit any files you've added with git add, and also commit any files you've changed since then: 	
  git commit -a

Push 	Send changes to the master branch of your remote repository: 	
git push origin master

Update from the remote repository 	Fetch and merge changes on the remote server to your working directory: 	
git pull

Branches 	Create a new branch and switch to it: 	
git checkout -b <branchname>


And finally some tips

    Donâ€™t EVER commit private keys / api keys/certificates.
    Integrate linters and code checkers and beautifiers such as jsPrettier (but first ask your team first if they use any)
    Use descriptive commit messages and branch names.
    Create a branch for every new feature, and delete the branch once the feature is merged into main.
    Tag your commit messages with the ticket number it corresponds with (if you are working in an agile environment)


Nie uzywac
git commit -am "poprawka"
!!!!!!!!!!!!!!!!!!!!!!!!!!!!


git add --patch

https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1

